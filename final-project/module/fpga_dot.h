#ifndef _FPGA_DOT_INCLUDED_
#define _FPGA_DOT_INCLUDED_

// Constants for Dot Matrix device
#define DOT_ROWS 10
#define DOT_COLS 7
#define DOT_0000 0x0  // ....
#define DOT_0001 0x1  // ...@
#define DOT_0010 0x2  // ..@.
#define DOT_0011 0x3  // ..@@
#define DOT_0100 0x4  // .@..
#define DOT_0101 0x5  // .@.@
#define DOT_0110 0x6  // .@@.
#define DOT_0111 0x7  // .@@@
#define DOT_1000 0x8  // @...
#define DOT_1001 0x9  // @..@
#define DOT_1010 0xA  // @.@.
#define DOT_1011 0xB  // @.@@
#define DOT_1100 0xC  // @@..
#define DOT_1101 0xD  // @@.@
#define DOT_1110 0xE  // @@@.
#define DOT_1111 0xF  // @@@@

const unsigned char fpga_dot_letters[][10] = {
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_0110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0111 << 4) + DOT_1111,
     (DOT_0111 << 4) + DOT_1111, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011},  // A
    {(DOT_0111 << 4) + DOT_1100, (DOT_0110 << 4) + DOT_0111,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_1100, (DOT_0111 << 4) + DOT_1100,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0111, (DOT_0111 << 4) + DOT_1100},  // B
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0001,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0011 << 4) + DOT_1110, (DOT_0001 << 4) + DOT_1100},  // C
    {(DOT_0111 << 4) + DOT_1000, (DOT_0111 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_0110, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0110,
     (DOT_0111 << 4) + DOT_1110, (DOT_0111 << 4) + DOT_1000},  // D
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111},  // E
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000},  // F
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0111,
     (DOT_0110 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0011 << 4) + DOT_1110, (DOT_0001 << 4) + DOT_1100},  // G
    {(DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011},  // H
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111},  // I
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0100 << 4) + DOT_1000,
     (DOT_0111 << 4) + DOT_1000, (DOT_0011 << 4) + DOT_0000},  // J
    {(DOT_0110 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0110, (DOT_0110 << 4) + DOT_1100,
     (DOT_0111 << 4) + DOT_1000, (DOT_0111 << 4) + DOT_1000,
     (DOT_0110 << 4) + DOT_1100, (DOT_0110 << 4) + DOT_0110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0001},  // K
    {(DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111},  // L
    {(DOT_0110 << 4) + DOT_0011, (DOT_0111 << 4) + DOT_0111,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_1011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011},  // M
    {(DOT_0100 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_0011, (DOT_0111 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_1011, (DOT_0110 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0111, (DOT_0110 << 4) + DOT_0111,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0001},  // N
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_0110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0100 << 4) + DOT_0001,
     (DOT_0100 << 4) + DOT_0001, (DOT_0100 << 4) + DOT_0001,
     (DOT_0100 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0011 << 4) + DOT_0110, (DOT_0001 << 4) + DOT_1100},  // O
    {(DOT_0111 << 4) + DOT_1110, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000,
     (DOT_0110 << 4) + DOT_0000, (DOT_0110 << 4) + DOT_0000},  // P
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_0110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0100 << 4) + DOT_0001,
     (DOT_0100 << 4) + DOT_0001, (DOT_0100 << 4) + DOT_1001,
     (DOT_0100 << 4) + DOT_1101, (DOT_0110 << 4) + DOT_0111,
     (DOT_0011 << 4) + DOT_0110, (DOT_0001 << 4) + DOT_1101},  // Q
    {(DOT_0111 << 4) + DOT_1110, (DOT_0111 << 4) + DOT_1111,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_1100, (DOT_0110 << 4) + DOT_0110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0001},  // R
    {(DOT_0001 << 4) + DOT_1100, (DOT_0011 << 4) + DOT_1110,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0001,
     (DOT_0011 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1110,
     (DOT_0100 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0011 << 4) + DOT_1110, (DOT_0001 << 4) + DOT_1100},  // S
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000},  // T
    {(DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0111 << 4) + DOT_1111,
     (DOT_0111 << 4) + DOT_1111, (DOT_0011 << 4) + DOT_1110},  // U
    {(DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0111 << 4) + DOT_0111,
     (DOT_0011 << 4) + DOT_1110, (DOT_0001 << 4) + DOT_1100},  // V
    {(DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_0011,
     (DOT_0110 << 4) + DOT_0011, (DOT_0110 << 4) + DOT_1011,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0111 << 4) + DOT_0111, (DOT_0110 << 4) + DOT_0011},  // W
    {(DOT_0100 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0010 << 4) + DOT_0010, (DOT_0011 << 4) + DOT_0110,
     (DOT_0001 << 4) + DOT_1100, (DOT_0001 << 4) + DOT_1100,
     (DOT_0011 << 4) + DOT_0110, (DOT_0010 << 4) + DOT_0010,
     (DOT_0110 << 4) + DOT_0011, (DOT_0100 << 4) + DOT_0001},  // X
    {(DOT_0100 << 4) + DOT_0001, (DOT_0110 << 4) + DOT_0011,
     (DOT_0011 << 4) + DOT_0110, (DOT_0001 << 4) + DOT_1100,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000,
     (DOT_0000 << 4) + DOT_1000, (DOT_0000 << 4) + DOT_1000},  // Y
    {(DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111,
     (DOT_0000 << 4) + DOT_0110, (DOT_0000 << 4) + DOT_1100,
     (DOT_0000 << 4) + DOT_1100, (DOT_0001 << 4) + DOT_1000,
     (DOT_0001 << 4) + DOT_1000, (DOT_0011 << 4) + DOT_0000,
     (DOT_0111 << 4) + DOT_1111, (DOT_0111 << 4) + DOT_1111},  // Z
};

const unsigned char fpga_dot_empty[] = {DOT_0000, DOT_0000, DOT_0000, DOT_0000,
                                        DOT_0000, DOT_0000, DOT_0000, DOT_0000,
                                        DOT_0000, DOT_0000};

#endif /* _FPGA_DOT_INCLUDED_ */
